{
  "hash": "47167c7f1b994b7bf6534bbacbd31481",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"A threasure trove of images\"\nauthor: \"José R. Ferrer-Paris\"\ndate: \"2024-05-18\"\ncategories: [how2, flickr, API, R code]\n---\n\n\nSo, I think I need some photos in my website, and I have a Flickr account, and I use R. \n\nThere should be a library that... Oh yes! found it!\n\n<https://koki25ando.github.io/FlickrAPI/>\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"FlickrAPI\")\n```\n:::\n\n\nNow I need a [Flickr API key](https://www.flickr.com/services/developer/). Once I have the key I can save it as an environment variable and call it from R:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(FlickrAPI)\nsetFlickrAPIKey(api_key = Sys.getenv(\"FLICKR_API_KEY\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nTo install your API key for use in future sessions, run this function with `install = TRUE`.\n```\n\n\n:::\n:::\n\n\nI can query up to 1000 photos from one user using the `getPhotos` function. But I figured out that I could use a `foreach` loop to run and combine multiple queries.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(foreach)\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n\n```{.r .cell-code}\nphotos <- foreach(\n  the_user=c(\"jferrer\", \"jferrer\", \"199798864@N08\"), \n  the_page=c(1,2,1),\n  .combine = \"bind_rows\") %do% {\n  getPhotos(\n    user_id = the_user, \n    img_size=\"m\", \n    extras = c(\"description\", \"owner_name\", \"url_m\"), \n    per_page=1000, \n    page=the_page)\n}\n\ndim(photos)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 964  14\n```\n\n\n:::\n:::\n\n\nNow I have a collection of photos in R and I can select one by title or any other criteria:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nselected_photo <- slice(photos, grep(\"N/W\", title))\n```\n:::\n\n\nAnd combine the R and markdown magic to show the photo in this document:\n\n\n\n```{.r .cell-code}\nphoto_md <- sprintf(\n  \"![**%s** by %s@flickr](%s){.preview-image .lightbox}\",\n  selected_photo$title,\n  selected_photo$ownername,\n  selected_photo$url_m\n)\n\ncat(photo_md)\n```\n\n![**N/W** by ¡Fgz!@flickr](https://live.staticflickr.com/2630/4079708198_f7b771b0d1.jpg){.preview-image .lightbox}\n\n\nIf I want to save the information for future use in my blog, I need first to create a folder to hold the file, and then save the R object into an RDS file. Like this:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhere::i_am(\"posts/foto-collection.qmd\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nhere() starts at /Users/z3529065/proyectos/personal/spatial-one\n```\n\n\n:::\n\n```{.r .cell-code}\ndata_dir <- here::here(\"Rdata\")\nif (!dir.exists(data_dir))\n  dir.create(data_dir)\nfile_name <- here::here(data_dir, \"flickr-photos.rds\")\nsaveRDS(file = file_name, photos)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}