{
  "hash": "209518d7c797e08f00c81c791cd3ab4e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Welcome To My World\"\nauthor: \"José R. Ferrer-Paris\"\ndate: \"2024-05-17\"\ncategories: [how2]\nengine: knitr\n---\n\n\nThis is the typical `Hello World!` post in my new and wonderful blog. Welcome!\n\nSo this is basically here to test if the whole thing works.\n\nTo get started I first installed quarto.^[Well to be honest, it all started with a operating system, then installing lots of packages, and R and Python, and ... but let's keep it short.]\n\nThen, once I decided how to name my blog, I ran:\n\n```sh\nquarto create project blog spatial-one\n```\n\nThen I started to prepare the content and structure of my initial posts, modified the text in the `qmd` files and the configuration in the `_quarto.yml` and ran \n\nI started to keep track of changes with git:^[If we do this before rendering or preview of the site, *quarto* will create a `.gitignore` file with the line `/.quarto/`.]\n\n```sh\ncd spatial-one\ngit init\n```\n\nI switch between VS-code, Rstudio and the terminal to organise my files, and kept working on this until I got something I wanted to preview:\n\n```sh\nquarto preview spatial-one\n```\n\nHere some random notes about the process\n\n## icons\n\nFor some reason I though these would fontsawesome icons, but the help prompt in VS-code pointed out:\n\n> Name of bootstrap icon (e.g. github, twitter, share). See https://icons.getbootstrap.com/ for a list of available icons\n\nAlso, it turns out we can add emojis to the text of a post using this in the front-matter of the file:\n\n\n::: {.cell}\n\n```{.yaml .cell-code}\n---\ntitle: \"My Document\"\nfrom: markdown+emoji\n---\n```\n:::\n\n\nThis is a handy demonstration of all emojis: <https://gist.github.com/rxaviers/7360908>\n\n## Freeze\n\nThe posts directory has a `_metadata.yml` file with the `freeze` option activated by default.\n\n## `_site` folder\n\nIn the quarto documentation they recommend to add it to the `.gitignore` file, so as to keep the raw content and code in version control, but the output served in a different workflow (either with quarto.pub or GitHub actions).\n\n## Secrets\n\nThere are certain environment variables that need to be specified in order to render the posts in this blog. I created an `_environment.required` file with the list of required variables and empty values.\n\n\n::: {.cell filename='_environment.required'}\n\n```{.bash .cell-code}\nFLICKR_API_KEY=\n```\n:::\n\n\nFor local development, I defined these variables in the `_environment.local` file and ignore this file in version control by adding `/_*.local` in `.gitignore`. \n\n## Photos\n\n### From Flickr\n\nIn order to use some external photos in my blog posts I create a table with the basic information from my photo collection in Flickr. I need to add this code-chunk in my post to locate and load the file:\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| message: false\nhere::i_am(\"posts/welcome.qmd\")\ndata_dir <- here::here(\"Rdata\")\nfile_name <- here::here(data_dir, \"flickr-photos.rds\")\nphotos <- readRDS(file = file_name)\n```\n````\n:::\n\n\nAnd these lines to create the markdown code to include in my blog post (notice the `results` option):\n\n\n\n````{.cell-code}\n```{{r}}\n#| results: asis\nselected_photo <- dplyr::slice(photos, grep(\"Del-etreando\", title))\n\nphoto_md <- sprintf(\n  \"![**%s** by %s@flickr](%s){.preview-image .lightbox}\",\n  selected_photo$title,\n  selected_photo$ownername,\n  selected_photo$url_m\n)\n\ncat(photo_md)\n```\n````\n\n![**Del-etreando  (21/365+ñ)** by ¡Fgz!@flickr](https://live.staticflickr.com/3130/2534581557_2989fb2b88.jpg){.preview-image .lightbox}\n\n\nI add the class `preview-image` to select which foto will appear in the listing page of posts.\n\n\n### From iNaturalist\n\nSince I also have a bunch of observations in iNaturalist, I can use those as another source of images to illustrate my blog. I need to add this code-chunk in my post to locate and load the file:\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| message: false\nhere::i_am(\"posts/welcome.qmd\")\ndata_dir <- here::here(\"Rdata\")\nfile_name <- here::here(\"Rdata\",\"iNaturalist-obs-NeoMapas.rds\")\nuser_obs <- readRDS(file=file_name)\n```\n````\n:::\n\n\nAnd these lines to create the markdown code to include in my blog post (notice the `results` option):\n\n\n\n````{.cell-code}\n```{{r}}\n#| results: asis\nselected_photo <- user_obs |> dplyr::slice_sample(n=1)\nphoto_md <- sprintf(\n  \"![*%s* observed in %s by [%s@iNaturalist](%s)](%s){height=150 group=\\\"my-gallery\\\"}\",\n  selected_photo$species_guess,\n  selected_photo$place_guess,\n  selected_photo$user_login,\n  selected_photo$url,\n  selected_photo$image_url\n)\n\ncat(photo_md)\n```\n````\n\n![*New Holland Honeyeater* observed in Royal Nat'l Park NSW 2233, Australia by [neomapas@iNaturalist](https://www.inaturalist.org/observations/172436959)](https://inaturalist-open-data.s3.amazonaws.com/photos/299347539/medium.jpeg){height=150 group=\"my-gallery\"}\n\n\n\n### From other places\n\nI keep some random images in the `thesaurus` folder and use `imagemagick` to make copies for my blog post. For example:\n\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nconvert thesaurus/207d9efb-e858-4c4c-81ab-ac056f72c870.jpeg -resize 300x300 posts/wms-in-R/image.jpg \n```\n:::\n\n\n## Publish\n\nI am preparing this site for my quarto.pub profile.\n\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}